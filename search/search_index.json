{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome This is an overview of the Sustainabase Activity Records Submission API. The API reference contains: All valid routes for data categories Required and available fields for each data category Data types for each field The API tutorial contains: API usage description Specific use case examples","title":"Welcome"},{"location":"#welcome","text":"This is an overview of the Sustainabase Activity Records Submission API. The API reference contains: All valid routes for data categories Required and available fields for each data category Data types for each field The API tutorial contains: API usage description Specific use case examples","title":"Welcome"},{"location":"api_specs/","text":"Activity Records API Reference Valid API routes: scope1/stationary-combustion: required: provider_name [string], account_number [string], date [string], fuel_type [string], total_amount [float], unit [string] allowed: building_address [string], total_cost [float] scope1/mobile-combustion: required: vehicle_type [string], account_number [string], date [string], total_amount [float], fuel_type [string], unit [string] allowed: total_cost [float] scope1/fugitive-emissions/purchased-gases-data: required: refrigerant_type [string], total_amount [float], unit [string] allowed: year [integer], total_cost [float] scope1/fugitive-emissions/simplified-material-balance-data: required: refrigerant_type [string], new_units_charge [float], new_units_capacity [float], existing_units_recharge [float], disposed_units_capacity [float], disposed_units_recovered [float] allowed: year [integer], new_units_charge_unit [string], new_units_capacity_unit [string], existing_units_recharge_unit [string], disposed_units_capacity_unit [string], disposed_units_recovered_unit [string] scope1/fugitive-emissions/screening-data: required: type_of_equipment [string], refrigerant_type [string] allowed: manufacturer [string], model_number [string], new_units_charge [float], new_units_charge_unit [string], existing_units_refrigerant_capacity [float], existing_units_refrigerant_capacity_unit [string], existing_units_months_in_used [float], disposed_units_refrigerant_capacity [float], disposed_units_refrigerant_capacity_unit [string], disposed_units_months_in_use [float] scope2/utilities/owned: required: facility_address [string], provider_name [string], account_number [string], begin_date [string], end_date [string], total_amount [float], unit [string], activity_type [string] allowed: total_cost [float] scope2/utilities/leased: required: facility_address [string], pct_occupied [float], begin_date [string], end_date [string], total_amount [float], unit [string], activity_type [string] allowed: provider_name [string], account_number [string], total_cost [float] scope3/waste: required: provider [string], account_number [string], date [string], waste_type [string], disposal_method [string], total_amount [float], unit [string] allowed: total_cost [float] scope3/transportation-and-distribution: required: supplier_or_customer [string], mode_of_transport [string], date [string], begin_point [string], end_point [string], total_weight [float], weight_unit [string] allowed: vehicle_type [string], total_cost [float] scope3/purchased-packaging/average-data: required: supplier [string], packaging_type [string], packaging_material [string], pct_recycled_content [float], other_sustainable_certifications [string], date [string], total_weight [float], unit [string] allowed: total_cost [float] scope3/purchased-packaging/average-data-using-key: required: sku [string], product_name [string], supplier [string], primary_packaging_type [string], primary_packaging_material [string], primary_packaging_weight [float], primary_packaging_pct_recycled_content [float], primary_packaging_sustainable_certs [string] allowed: primary_packaging_unit [string], secondary_packaging_type [string], secondary_packaging_material [string], secondary_packaging_weight [float], secondary_packaging_unit [string], tertiary_packaging_type [string], tertiary_packaging_material [string], tertiary_packaging_weight [float], tertiary_packaging_unit [string] scope3/purchased-packaging/spend-data: required: supplier [string], packaging_type [string], packaging_material [string], date [string], total_cost [float] allowed: # All allowed fields are required scope3/purchased-ingredients/average-data: required: supplier [string], ingredient_name [string], country_of_origin [string], date [string], total_weight [float], unit [string] allowed: total_cost [float] scope3/purchased-ingredients/average-component-data-using-key: required: sku [string], component_name [string], primary_ingredient_name [string], primary_ingredient_weight [float], primary_ingredient_unit [string] allowed: secondary_ingredient_name [string], secondary_ingredient_weight [float], secondary_ingredient_unit [string], other_ingredient_name [string], other_ingredient_weight [float], other_ingredient_unit [string] scope3/purchased-ingredients/average-product-data-using-key: required: sku [string], product_name [string], primary_ingredient_name [string], primary_ingredient_weight [float], primary_ingredient_unit [string] allowed: secondary_ingredient_name [string], secondary_ingredient_weight [float], secondary_ingredient_unit [string], other_ingredient_name [string], other_ingredient_weight [float], other_ingredient_unit [string] scope3/purchased-ingredients/spend-data: required: supplier [string], ingredient_name [string], date [string], total_cost [float] allowed: # All allowed fields are required scope3/contract-manufacturers: required: cmo_name [string], year [integer], total_cost [float] allowed: # All allowed fields are required scope3/business-travel/distance-data: required: method_of_travel [string], date [string], total_distance_traveled [float], unit [string] allowed: employee_id [string], total_cost [float] scope3/business-travel/begin-end-data: required: method_of_travel [string], date [string], begin_location [string], end_location [string], allowed: employee_id [string], total_cost [float] scope3/business-travel/spend-data: required: method_of_travel [string], date [string], total_cost [float] allowed: # All allowed fields are required","title":"Activity Records API Reference"},{"location":"api_specs/#activity-records-api-reference","text":"","title":"Activity Records API Reference"},{"location":"api_specs/#valid-api-routes","text":"","title":"Valid API routes:"},{"location":"api_specs/#scope1stationary-combustion","text":"required: provider_name [string], account_number [string], date [string], fuel_type [string], total_amount [float], unit [string] allowed: building_address [string], total_cost [float]","title":"scope1/stationary-combustion:"},{"location":"api_specs/#scope1mobile-combustion","text":"required: vehicle_type [string], account_number [string], date [string], total_amount [float], fuel_type [string], unit [string] allowed: total_cost [float]","title":"scope1/mobile-combustion:"},{"location":"api_specs/#scope1fugitive-emissionspurchased-gases-data","text":"required: refrigerant_type [string], total_amount [float], unit [string] allowed: year [integer], total_cost [float]","title":"scope1/fugitive-emissions/purchased-gases-data:"},{"location":"api_specs/#scope1fugitive-emissionssimplified-material-balance-data","text":"required: refrigerant_type [string], new_units_charge [float], new_units_capacity [float], existing_units_recharge [float], disposed_units_capacity [float], disposed_units_recovered [float] allowed: year [integer], new_units_charge_unit [string], new_units_capacity_unit [string], existing_units_recharge_unit [string], disposed_units_capacity_unit [string], disposed_units_recovered_unit [string]","title":"scope1/fugitive-emissions/simplified-material-balance-data:"},{"location":"api_specs/#scope1fugitive-emissionsscreening-data","text":"required: type_of_equipment [string], refrigerant_type [string] allowed: manufacturer [string], model_number [string], new_units_charge [float], new_units_charge_unit [string], existing_units_refrigerant_capacity [float], existing_units_refrigerant_capacity_unit [string], existing_units_months_in_used [float], disposed_units_refrigerant_capacity [float], disposed_units_refrigerant_capacity_unit [string], disposed_units_months_in_use [float]","title":"scope1/fugitive-emissions/screening-data:"},{"location":"api_specs/#scope2utilitiesowned","text":"required: facility_address [string], provider_name [string], account_number [string], begin_date [string], end_date [string], total_amount [float], unit [string], activity_type [string] allowed: total_cost [float]","title":"scope2/utilities/owned:"},{"location":"api_specs/#scope2utilitiesleased","text":"required: facility_address [string], pct_occupied [float], begin_date [string], end_date [string], total_amount [float], unit [string], activity_type [string] allowed: provider_name [string], account_number [string], total_cost [float]","title":"scope2/utilities/leased:"},{"location":"api_specs/#scope3waste","text":"required: provider [string], account_number [string], date [string], waste_type [string], disposal_method [string], total_amount [float], unit [string] allowed: total_cost [float]","title":"scope3/waste:"},{"location":"api_specs/#scope3transportation-and-distribution","text":"required: supplier_or_customer [string], mode_of_transport [string], date [string], begin_point [string], end_point [string], total_weight [float], weight_unit [string] allowed: vehicle_type [string], total_cost [float]","title":"scope3/transportation-and-distribution:"},{"location":"api_specs/#scope3purchased-packagingaverage-data","text":"required: supplier [string], packaging_type [string], packaging_material [string], pct_recycled_content [float], other_sustainable_certifications [string], date [string], total_weight [float], unit [string] allowed: total_cost [float]","title":"scope3/purchased-packaging/average-data:"},{"location":"api_specs/#scope3purchased-packagingaverage-data-using-key","text":"required: sku [string], product_name [string], supplier [string], primary_packaging_type [string], primary_packaging_material [string], primary_packaging_weight [float], primary_packaging_pct_recycled_content [float], primary_packaging_sustainable_certs [string] allowed: primary_packaging_unit [string], secondary_packaging_type [string], secondary_packaging_material [string], secondary_packaging_weight [float], secondary_packaging_unit [string], tertiary_packaging_type [string], tertiary_packaging_material [string], tertiary_packaging_weight [float], tertiary_packaging_unit [string]","title":"scope3/purchased-packaging/average-data-using-key:"},{"location":"api_specs/#scope3purchased-packagingspend-data","text":"required: supplier [string], packaging_type [string], packaging_material [string], date [string], total_cost [float] allowed: # All allowed fields are required","title":"scope3/purchased-packaging/spend-data:"},{"location":"api_specs/#scope3purchased-ingredientsaverage-data","text":"required: supplier [string], ingredient_name [string], country_of_origin [string], date [string], total_weight [float], unit [string] allowed: total_cost [float]","title":"scope3/purchased-ingredients/average-data:"},{"location":"api_specs/#scope3purchased-ingredientsaverage-component-data-using-key","text":"required: sku [string], component_name [string], primary_ingredient_name [string], primary_ingredient_weight [float], primary_ingredient_unit [string] allowed: secondary_ingredient_name [string], secondary_ingredient_weight [float], secondary_ingredient_unit [string], other_ingredient_name [string], other_ingredient_weight [float], other_ingredient_unit [string]","title":"scope3/purchased-ingredients/average-component-data-using-key:"},{"location":"api_specs/#scope3purchased-ingredientsaverage-product-data-using-key","text":"required: sku [string], product_name [string], primary_ingredient_name [string], primary_ingredient_weight [float], primary_ingredient_unit [string] allowed: secondary_ingredient_name [string], secondary_ingredient_weight [float], secondary_ingredient_unit [string], other_ingredient_name [string], other_ingredient_weight [float], other_ingredient_unit [string]","title":"scope3/purchased-ingredients/average-product-data-using-key:"},{"location":"api_specs/#scope3purchased-ingredientsspend-data","text":"required: supplier [string], ingredient_name [string], date [string], total_cost [float] allowed: # All allowed fields are required","title":"scope3/purchased-ingredients/spend-data:"},{"location":"api_specs/#scope3contract-manufacturers","text":"required: cmo_name [string], year [integer], total_cost [float] allowed: # All allowed fields are required","title":"scope3/contract-manufacturers:"},{"location":"api_specs/#scope3business-traveldistance-data","text":"required: method_of_travel [string], date [string], total_distance_traveled [float], unit [string] allowed: employee_id [string], total_cost [float]","title":"scope3/business-travel/distance-data:"},{"location":"api_specs/#scope3business-travelbegin-end-data","text":"required: method_of_travel [string], date [string], begin_location [string], end_location [string], allowed: employee_id [string], total_cost [float]","title":"scope3/business-travel/begin-end-data:"},{"location":"api_specs/#scope3business-travelspend-data","text":"required: method_of_travel [string], date [string], total_cost [float] allowed: # All allowed fields are required","title":"scope3/business-travel/spend-data:"},{"location":"api_tutorial/","text":"Getting Started The API route is composed of a base URL plus a route path. The base URL is: https://o0cj2w35kc.execute-api.us-east-1.amazonaws.com/prod/activities Each activity record category is associated with a route path, defined in the API Reference. These route paths Each route accepts a list of JSON objects formatted like: [ { [field name]: [value] }, [...] ] The list can contain up to 50 activity records for storage. For example, a submission of two activity records to scope1/stationary-combustion could look like: [ { \"building_address\": \"123 Sesame Street\", \"provider_name\": \"Big Bird\", \"account_number\": 1234, \"date\": \"4/1/2022\", \"fuel_type\": \"propane\", \"total_amount\": 650.00, \"unit\": \"gallons\", \"total_cost\": 567.89 }, { \"building_address\": \"123 Sesame Street\", \"provider_name\": \"Big Bird\", \"account_number\": 1234, \"date\": \"3/1/2022\", \"fuel_type\": \"propane\", \"total_amount\": 900.00, \"unit\": \"gallons\", \"total_cost\": 1050.50 } ] Every required field must be present for data to be landed. Allowed fields may or may not be present. Expected types are strings, integers or floating point decimals. All dates are strings formatted as \"MM-DD-YYYY\". Required and allowed fields are drawn from \"Sustainabase Data Requests_ROMANO-METHOD.xlsx\". API requests are given an 'Authorization' header with an ID token, to be obtained from the Cognito hosted authentication UI or directly from the Sustainabase team. Several responses are possible. 200 OK Everything went well. The body of the response contains information about how many activities were stored and where. 500 Internal Server Error This means the API resource or data are incomplete in some way, and the activity has not been stored. This can happen in case of the following problems with the request: Route is not recognized Missing required field for category Included field not available in category Too many records included in request Tutorials Use Case: Submitting Scope 1 - Stationary Combustion activity data Retrieve ID token with Cognito login information. Sample JSON payload: [ { \"provider_name\": \"AAA Gas Inc.\", \"account_number\": \"12345\", \"date\": \"01-01-2021\", \"fuel_type\": \"propane\", \"total_amount\": 500.00, \"unit\": \"gallons\", \"building_address\": \"Union St, Anywhere, FL\", \"total_cost\": 500.00 } ] POST request to: https://o0cj2w35kc.execute-api.us-east-1.amazonaws.com/prod/activities/scope1/stationary-combustion Successful response: 1 objects placed in scope1/stationary-combustion Use Case: Submitting Scope 2 - Owned Utilities data Retrieve ID token with Cognito login information Sample JSON payload: [ { \"facility_address\":\"Union St, Anywhere, FL\", \"provider_name\":\"Electric Company Inc\", \"account_number\":\"11111555555555\", \"begin_date\":\"2021-01-01\", \"end_date\":\"2021-01-31\", \"total_amount\":50000, \"unit\":\"kWh\", \"activity_type\":\"Electricity\" } ] POST request to: https://o0cj2w35kc.execute-api.us-east-1.amazonaws.com/prod/activities/scope2/utilities/owned Successful response: 1 objects placed in scope2/utlities/owned Use Case: Submitting Scope 3 - Purchased Packaging - Average data Retrieve ID token with Cognito login information Sample JSON payload: [ { \"supplier\":\"ABC Plastics\", \"packaging_type\":\"5 oz bottles\", \"packaging_material\":\"HDPE\", \"pct_recycled_content\":\"0, \"other_sustainable_certifications\":\"None\", \"date\":\"2021-01-31\", \"total_weight\":300.00, \"unit\":\"lbs\" } ] POST request to: https://o0cj2w35kc.execute-api.us-east-1.amazonaws.com/prod/activities/scope3/purchased-packaging/average-data Successful response: 1 objects placed in scope3-purchased-packaging/average-data","title":"Getting Started"},{"location":"api_tutorial/#getting-started","text":"The API route is composed of a base URL plus a route path. The base URL is: https://o0cj2w35kc.execute-api.us-east-1.amazonaws.com/prod/activities Each activity record category is associated with a route path, defined in the API Reference. These route paths Each route accepts a list of JSON objects formatted like: [ { [field name]: [value] }, [...] ] The list can contain up to 50 activity records for storage. For example, a submission of two activity records to scope1/stationary-combustion could look like: [ { \"building_address\": \"123 Sesame Street\", \"provider_name\": \"Big Bird\", \"account_number\": 1234, \"date\": \"4/1/2022\", \"fuel_type\": \"propane\", \"total_amount\": 650.00, \"unit\": \"gallons\", \"total_cost\": 567.89 }, { \"building_address\": \"123 Sesame Street\", \"provider_name\": \"Big Bird\", \"account_number\": 1234, \"date\": \"3/1/2022\", \"fuel_type\": \"propane\", \"total_amount\": 900.00, \"unit\": \"gallons\", \"total_cost\": 1050.50 } ] Every required field must be present for data to be landed. Allowed fields may or may not be present. Expected types are strings, integers or floating point decimals. All dates are strings formatted as \"MM-DD-YYYY\". Required and allowed fields are drawn from \"Sustainabase Data Requests_ROMANO-METHOD.xlsx\". API requests are given an 'Authorization' header with an ID token, to be obtained from the Cognito hosted authentication UI or directly from the Sustainabase team. Several responses are possible.","title":"Getting Started"},{"location":"api_tutorial/#200-ok","text":"Everything went well. The body of the response contains information about how many activities were stored and where.","title":"200 OK"},{"location":"api_tutorial/#500-internal-server-error","text":"This means the API resource or data are incomplete in some way, and the activity has not been stored. This can happen in case of the following problems with the request: Route is not recognized Missing required field for category Included field not available in category Too many records included in request","title":"500 Internal Server Error"},{"location":"api_tutorial/#tutorials","text":"","title":"Tutorials"},{"location":"api_tutorial/#use-case-submitting-scope-1-stationary-combustion-activity-data","text":"Retrieve ID token with Cognito login information. Sample JSON payload: [ { \"provider_name\": \"AAA Gas Inc.\", \"account_number\": \"12345\", \"date\": \"01-01-2021\", \"fuel_type\": \"propane\", \"total_amount\": 500.00, \"unit\": \"gallons\", \"building_address\": \"Union St, Anywhere, FL\", \"total_cost\": 500.00 } ] POST request to: https://o0cj2w35kc.execute-api.us-east-1.amazonaws.com/prod/activities/scope1/stationary-combustion Successful response: 1 objects placed in scope1/stationary-combustion","title":"Use Case: Submitting Scope 1 - Stationary Combustion activity data"},{"location":"api_tutorial/#use-case-submitting-scope-2-owned-utilities-data","text":"Retrieve ID token with Cognito login information Sample JSON payload: [ { \"facility_address\":\"Union St, Anywhere, FL\", \"provider_name\":\"Electric Company Inc\", \"account_number\":\"11111555555555\", \"begin_date\":\"2021-01-01\", \"end_date\":\"2021-01-31\", \"total_amount\":50000, \"unit\":\"kWh\", \"activity_type\":\"Electricity\" } ] POST request to: https://o0cj2w35kc.execute-api.us-east-1.amazonaws.com/prod/activities/scope2/utilities/owned Successful response: 1 objects placed in scope2/utlities/owned","title":"Use Case: Submitting Scope 2 - Owned Utilities data"},{"location":"api_tutorial/#use-case-submitting-scope-3-purchased-packaging-average-data","text":"Retrieve ID token with Cognito login information Sample JSON payload: [ { \"supplier\":\"ABC Plastics\", \"packaging_type\":\"5 oz bottles\", \"packaging_material\":\"HDPE\", \"pct_recycled_content\":\"0, \"other_sustainable_certifications\":\"None\", \"date\":\"2021-01-31\", \"total_weight\":300.00, \"unit\":\"lbs\" } ] POST request to: https://o0cj2w35kc.execute-api.us-east-1.amazonaws.com/prod/activities/scope3/purchased-packaging/average-data Successful response: 1 objects placed in scope3-purchased-packaging/average-data","title":"Use Case: Submitting Scope 3 - Purchased Packaging - Average data"}]}